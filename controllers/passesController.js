// loading database model
import { Passes, Clients, PassTypes } from '../models/index.js';

// loading service functions
import { transformData, transformDate } from '../public/javascripts/functions.js';

//getting all passes
export const getPasses = async function (req, res) {
    try {
        let passes = await Passes.findAll()
        let clients = await Clients.findAll({
            attributes: ['id', 'name', 'surname']
        })
        let passtypes = await PassTypes.findAll({
            attributes: ['idPassTypes', 'Type']
        })
        passes = transformData(passes)
        clients = transformData(clients)
        passtypes = transformData(passtypes)
        passes = passes.map(item => {
            let idClient = item.clientId;
            let idPassType = item.passTypeId
            let client = clients.find(item => item.id === idClient);
            item.name = client.name;
            item.surname = client.surname;
            item.passtype = passtypes.find(item => item.idPassTypes === idPassType).Type;
            item.startDate = transformDate(item.startDate);
            item.endDate = transformDate(item.endDate);
            return item;
        });
        console.log(`Found ${passes.length} passes`)
        res.render('passes.hbs', {
            passes,
            title: 'Список абонементов',
        });
    } catch (err) {
        console.log(err)
        res.redirect('back')
    }
}

//create new pass form
export const newPass = async function (req, res) {
    let client;
    if (req.body.id) {
        client = {
            id: req.body.id,
            name: req.body.name,
            surname: req.body.surname,
        }
    }
    try {
        let clients = await Clients.findAll({
            attributes: ['idClients', 'Name', 'Surname'],
            order:[['Surname', 'ASC']]
        })
        let passtypes = await PassTypes.findAll({
            attributes:['idPassTypes', 'Type']
        })
        clients = transformData(clients);
        passtypes=transformData(passtypes);
        console.log(`Found ${clients.length} clients and ${passtypes.length} passtypes`);
        let button1 = {
            action: "/passes/create",
            name: "Создать",
        };
        let button2 = {
            action: "javascript:history.go(-1)",
            name: "Отмена",
        }
        res.render("newpass", {
            title: 'Создание нового абонемента',
            button1,
            button2,
            passtypes,
            clients,
            client,
        });
    } catch (err) {
        console.log(err)
        res.redirect('back')
    }
}

//posting new pass to database
export const createPass = async function (req, res) {
    let idClient = req.body.idClient;
    let idPassType = req.body.idPassType;
    let startDate = new Date(req.body.startDate);
    try {
        let passtypes = await PassTypes.findAll({
            attributes:['Amount', 'Week', 'Cost'],
            where: {
                idPassTypes: idPassType
            }
        })
        passtypes = passtypes[0].dataValues
        let endDate = new Date();
        endDate.setDate(startDate.getDate() + 7 * passtypes.Week - 1);
        let pass = await Passes.create({ID_Clients: idClient, ID_PassTypes: idPassType, DateStart: startDate, DateEnd: endDate, ClassesLeft: passtypes.Amount, Cost: passtypes.Cost})
        pass = pass.dataValues
        console.log(`Pass autogenerated ID: ${pass.idPasses}`)
        res.redirect(`/passes/${pass.idPasses}`)
    } catch (err) {
        console.log(err)
        res.redirect('/passes/newpass')
    }
};

//вывод абонемента по его id
export const getPass = async function (req, res) {
    const id = req.params.idPasses;
    try {
        let pass = await Passes.findAll({
            where: {
                idPasses: id
            }
        })
        pass = pass[0].dataValues
        let client = await Clients.findAll({
            attributes: ['Name', 'Surname'],
            where: {
                idClients: pass.ID_Clients
            }
        })
        client = client[0].dataValues
        let passtype = await PassTypes.findAll({
            attributes: ['Type'],
            where: {
                idPassTypes: pass.ID_PassTypes
            }
        })
        passtype = passtype[0].dataValues
        pass.Name = client.Name
        pass.Surname = client.Surname
        pass.Type = passtype.Type
        res.render('passcard', {
            title: `Абонемент №${pass.idPasses}`,
            pass,
        })
    } catch (err) {
        console.log(err)
        res.redirect('/passes')
    }
};

//редактирование абонемента

export const editPass = function (request, response) {

};

//удаление абонемента

export const deletePass = async function (req, res) {
    let id = req.params.idPasses
    try {
        await Passes.destroy({
            where: {
                idPasses: id
            }
        })
        console.log(`Deleted pass with id = ${id}`)
        res.redirect('back')
    } catch (err) {
        console.log(err)
        res.redirect('back')
    }
};