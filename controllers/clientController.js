// loading database model
const model = require('../boot/db.js')

// loading service functions
const {transformData} = require("../public/javascripts/functions.js");

// returning clients list
exports.getClients = async function(req, res) {
    try {
        let clients = await model.client.findAll({
            order: [['Surname', 'ASC'], ['Name', 'ASC']],
        });
        clients = transformData(clients);
        res.render('clients', {
            title: 'Список клиентов',
            clients
        });
    } catch(err) {
        console.log(err);
        res.redirect('/');
    };
};

// returning blank client card
exports.newClient = function(req, res) {
    let button1 = {
        action : "/clients/create",
        name : "Создать",
    };
    let button2 = {
        action : "/clients",
        name : "Отмена",
    };
    res.render("clientcard", {
        button1,
        button2,
        title: "Новый клиент",
    });
};

//отправка данных с формы создания клиента в БД
exports.createClient = async function (req, res) {
    if(!req.body) return res.sendStatus(400);
    const name = req.body.name;
    const surname = req.body.surname;
    const cellphone = req.body.cellphone;
    const vk = req.body.vk;
    const insta = req.body.insta;
    const info = req.body.info;
    const birthday = req.body.birthday ? req.body.birthday : null;
    try {
        let client = await model.client.create({Name: name, Surname: surname, Cellphone: cellphone, VK: vk, Insta: insta, Info: info, Birthday: birthday});
        client = client.dataValues;
        console.log('Client autogenerated id:', client.idClients, client.Name, client.Surname);
        res.redirect(`/clients/${client.idClients}`);
    } catch(err) {
        console.log(err);
        return res.redirect('back');
    };
};

// поиск клиента по фамилии
exports.clientsFilter = async function (req, res) {
    const surname = req.body.filterSurname;
    try {
        let client = await model.client.findAll({
            where: {
                Surname: surname
            }
        });
        clients = transformData(client);
        res.render('clients', {
            clients
        });
    } catch(err) {
        console.log(err);
        res.redirect('/clients');
    };
};

//возврат карточки клиента по ID
exports.getClientCard = async function (req, res) {
    const id = req.params.idClients;
    try {
        let client = await model.client.findAll({
            where: {
                idClients: id
            }
        });
        let passes = await model.pass.findAll({
            where: {
                ID_Clients: id
            }
        });
        client = transformData(client);
        passes = transformData(passes);
        let button1 = {
            action: "/clients/update",
            name: "Редактировать",
        };
        let button2 = {
            action: "/clients/delete",
            name: "Удалить",
        };
        res.render('clientcard', {
            button1,
            button2,
            title: "Карточка клиента",
            showpasses: true,
            client: client[0],
            passes,
        });
    } catch (err) {
        console.log(err);
    };
};

//редактирование карточки клиента
exports.updateClient = async function (req, res) {
    if (req.body) return res.sendStatus(400);
    const id = req.body.id;
    const name = req.body.name;
    const surname = req.body.surname;
    const cellphone = req.body.cellphone;
    const vk = req.body.vk;
    const insta = req.body.insta;
    const info = req.body.info;
    const birthday = req.body.birthday ? req.body.birthday : null;
    try {
        let client = await model.client.update({
            Name: name,
            Surname: surname,
            Cellphone: cellphone,
            VK: vk,
            Insta: insta,
            Info: info,
            Birthday: birthday,
        },  {
                where: {
                    idClients: id
                }, returning: true
            });
        console.log(client);
        console.log(`Update client ${surname} ${name} sucsessful`);
        res.redirect(`/clients/${id}`);
    } catch (err) {
        console.log(err);
        res.redirect('back');
    };
};

//удаление клиента из БД
exports.deleteClient = async function(req, res) {
    if(!req.body) return res.sendStatus(400);
    const id = req.body.id;
    try {
        await model.client.destroy({
            where: {
                idClients: id
            }
        });
    } catch (err) {
        console.log(err);
    };
    res.redirect("/clients");
};